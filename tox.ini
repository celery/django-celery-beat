[tox]
envlist =
    py27-django{111}
    py35-django{111,20}
    py37-django{111,20}
    pypy-django{111}

    flake8
    flakeplus
    apicheck
    linkcheck
    pydocstyle
    cov

[travis:env]
DJANGO =
    1.11: django111
    2.0: django20
    2.2: django22

[testenv]
deps=
    -r{toxinidir}/requirements/default.txt
    -r{toxinidir}/requirements/test.txt
    -r{toxinidir}/requirements/test-ci.txt

    cov: -r{toxinidir}/requirements/test-django111.txt

    django20: -r{toxinidir}/requirements/test-django20.txt
    django111: -r{toxinidir}/requirements/test-django111.txt
    django22: -r{toxinidir}/requirements/test-django22.txt

    py{27,py}: -r{toxinidir}/requirements/python2.txt
    py{35,37}: -r{toxinidir}/requirements/python3.txt

    py{27,35,37,py},cov: ephem

    linkcheck,apicheck: -r{toxinidir}/requirements/docs.txt
    flake8,flakeplus,pydocstyle: -r{toxinidir}/requirements/pkgutils.txt
sitepackages = False
recreate = False
commands =
    pip list
    py.test -xv
    # ensure we can migrate up, back, and up again
    python manage.py migrate django_celery_beat
    python manage.py migrate django_celery_beat 0001
    python manage.py migrate django_celery_beat

[testenv:python37]
basepython = python3.7
whitelist_externals = *
commands =
    # for ubutu xenial we must fix erlang for rabbitmq-server to work
    sudo apt install -y wget
    wget http://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
    sudo apt-key add erlang_solutions.asc
    sudo apt update
    sudo apt install -y erlang
    sudo apt install -y erlang-nox
    sudo apt install -y rabbitmq-server
    sudo /etc/init.d/rabbitmq-server start
    sudo /etc/init.d/rabbitmq-server status

    pip install ephem
    pip install -U https://github.com/celery/celery/zipball/master#egg=celery
    pip install -U https://github.com/celery/kombu/zipball/master#egg=kombu

    pip list
    py.test -xv
    # ensure we can migrate up, back, and up again
    python manage.py migrate django_celery_beat
    python manage.py migrate django_celery_beat 0001
    python manage.py migrate django_celery_beat

[testenv:upgradebeat111]
basepython = python2.7
envdir = {toxinidir}/.env/upgradebeat111
whitelist_externals = *
commands =
    # must use older versions for starting with older celery-beat
    pip install "django>=1.11.17,<2.0"
    pip install "celery<5.0.0"
    pip list
    # save current hash so we can come back to it
    bash -c "git rev-parse HEAD > commit.hash"
    cat commit.hash
    # first install our starting version
    git fetch --tags
    git checkout v1.1.1
    python manage.py migrate django_celery_beat
    # now return to previous hash and ensure all migrations continue to work
    bash -c "cat commit.hash | git checkout -"
    python manage.py migrate django_celery_beat
    python manage.py migrate django_celery_beat 0001
    python manage.py migrate django_celery_beat

[testenv:upgradebeat120]
basepython = python2.7
envdir = {toxinidir}/.env/upgradebeat120
whitelist_externals = *
commands =
    # must use older versions for starting with older celery-beat
    pip install "django>=1.11.17,<2.0"
    pip install "celery<5.0.0"
    pip list
    # save current hash so we can come back to it
    bash -c "git rev-parse HEAD > commit.hash"
    cat commit.hash
    # first install our starting version
    git fetch --tags
    git checkout v1.2.0
    python manage.py migrate django_celery_beat
    # now return to previous hash and ensure all migrations continue to work
    bash -c "cat commit.hash | git checkout -"
    python manage.py migrate django_celery_beat
    python manage.py migrate django_celery_beat 0001
    python manage.py migrate django_celery_beat

[testenv:upgradebeat130]
basepython = python2.7
envdir = {toxinidir}/.env/upgradebeat130
whitelist_externals = *
commands =
    # must use older versions for starting with older celery-beat
    pip install "django>=1.11.17,<2.0"
    pip install "celery<5.0.0"
    pip list
    # save current hash so we can come back to it
    bash -c "git rev-parse HEAD > commit.hash"
    cat commit.hash
    # first install our starting version
    git fetch --tags
    git checkout v1.3.0
    rm -f django_celery_beat/migrations/*
    git checkout django_celery_beat/migrations
    # run the migration for the older version
    python manage.py migrate django_celery_beat
    # now return to previous hash and ensure all migrations continue to work
    bash -c "cat commit.hash | git checkout -"
    # now make sure migrations still work backward and forward
    python manage.py migrate django_celery_beat
    python manage.py migrate django_celery_beat 0001
    python manage.py migrate django_celery_beat

[testenv:upgradebeat140]
basepython = python2.7
envdir = {toxinidir}/.env/upgradebeat140
whitelist_externals = *
setenv =
    GIT_TAG = v1.4.0
    GIT_TMP = gitbackup140
commands =
    bash -c "./upgrade_test.sh {env:GIT_TMP} {env:GIT_TAG}"

[testenv:apicheck]
basepython = python3.5
commands =
    sphinx-build -W -b apicheck -d {envtmpdir}/doctrees docs docs/_build/apicheck

[testenv:linkcheck]
basepython = python3.5
commands =
    sphinx-build -W -b linkcheck -d {envtmpdir}/doctrees docs docs/_build/linkcheck

[testenv:flake8]
basepython = python3.5
commands =
    python -m flake8 {toxinidir}/django_celery_beat {toxinidir}/t

[testenv:flakeplus]
# flakeplus is specifically to catch python2 things only
basepython = python2.7
commands =
    flakeplus --2.7 {toxinidir}/django_celery_beat {toxinidir}/t

[testenv:pydocstyle]
basepython = python3.5
commands =
    pydocstyle {toxinidir}/django_celery_beat

[testenv:cov]
basepython = python3.5
usedevelop = true
commands =
    pip install -U https://github.com/celery/celery/zipball/master#egg=celery
    pip install -U https://github.com/celery/kombu/zipball/master#egg=kombu
    pip install Django==2.0
    py.test -x --cov=django_celery_beat --cov-report=xml --no-cov-on-fail
